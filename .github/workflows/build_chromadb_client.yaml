name: Build chromadb-client wheel on Power

on:
  workflow_dispatch:
    inputs:
      release:
        required: true
        type: string
  workflow_call:
    inputs:
      release:
        required: true
        type: string

permissions:
  actions: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "linux/ppc64le"

      - name: Install
        id: install
        run: >-
          docker run --rm --platform "linux/ppc64le"
          --mount "type=bind,src=$(pwd),dst=/build"
          -w "/build" ppc64le/python:3.11 /bin/bash -ec '
          apt-get update -y && apt-get install -y git curl;
          curl -Ls https://micro.mamba.pm/api/micromamba/linux-ppc64le/latest | tar -xvj bin/micromamba && mv bin/micromamba /usr/bin;
          micromamba shell init -s bash -r ~/micromamba && source ~/.bashrc;
          micromamba activate;
          micromamba install -y -p ~/micromamba -c rocketce -c defaults python=3.11 numpy && micromamba clean --all --yes;

          ~/micromamba/bin/python -m pip install -v --prefer-binary --extra-index-url https://repo.fury.io/mgiessing \
            "setuptools-scm>=8" setuptools wheel;

          git clone https://github.com/chroma-core/chroma.git && cd chroma;

          curl -LsO https://github.com/DahlitzFlorian/oss-ecosystem-grpc/releases/download/1.68.0/grpcio-1.68.0-cp311-cp311-linux_ppc64le.whl;

          sed -i "s/^python -m build$/python -m pip wheel --prefer-binary --find-links=grpcio-1.68.0-cp311-cp311-linux_ppc64le.whl \./g" ./clients/python/build_python_thin_client.sh;

          ./clients/python/build_python_thin_client.sh;

          WHEEL_PATH=$(find / -name "chromadb*.whl");
          echo "Found $WHEEL_PATH. Copying...";
          cp $WHEEL_PATH /build/;'          

      - name: Create a tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git tag ${{ inputs.release }}
          git push origin ${{ inputs.release }} -f

      - name: Capture the file
        id: capture
        run: |
          WHEEL_PATH=$(find $PWD -name "chromadb*.whl" -maxdepth 1)
          echo "Found $WHEEL_PATH"
          echo "ARTIFACT=$WHEEL_PATH" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.release }}
          tag_name: ${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.capture.outputs.ARTIFACT }}
          draft: false
          prerelease: false
